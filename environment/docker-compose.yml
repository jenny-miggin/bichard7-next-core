version: "3.2"
services:
  mq:
    image: rmohr/activemq
    ports:
      - 59161:8161
      - 61613:61613
    volumes:
      - ./activemq.xml:/opt/activemq/conf/activemq.xml
    healthcheck:
      test: ["CMD", "curl -u admin:admin -s http://localhost:8161/api/jolokia/exec/org.apache.activemq:type=Broker,brokerName=localhost,service=Health/healthStatus | grep Good"]
      interval: 5s
      timeout: 3s
      retries: 20

  pg:
    build:
      context: .
      dockerfile: PgDockerfile
    restart: always
    environment:
      POSTGRES_PASSWORD: password
      POSTGRES_DB: bichard
      POSTGRES_USER: bichard
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - 5432:5432
    command: postgres -c max_prepared_transactions=100 -c log_statement=all
    volumes:
      - ./pg-schema.sql:/docker-entrypoint-initdb.d/init-db.sql
    healthcheck:
      test: ["CMD", "psql", "-U", "bichard", "-c", "SELECT 1;"]
      interval: 2s
      timeout: 5s
      retries: 50

  conductor:
    image: conductor
    environment:
      AWS_ACCESS_KEY_ID: FAKE
      AWS_REGION: eu-west-2
      AWS_SECRET_ACCESS_KEY: FAKE
      CJSE_CONDUCTOR_DB_TYPE: ${CJSE_CONDUCTOR_DB_TYPE:-postgres}
      CJSE_CONDUCTOR_ELASTICSEARCH_URL: ${CJSE_CONDUCTOR_ELASTICSEARCH_URL:-http://elasticsearch:9200}
      CJSE_CONDUCTOR_ELASTICSEARCH_VERSION: ${CJSE_CONDUCTOR_ELASTICSEARCH_VERSION:-6}
      CJSE_CONDUCTOR_ENABLE_HTTP: "true"
      CJSE_CONDUCTOR_INDEXING_ENABLED: ${CJSE_CONDUCTOR_INDEXING_ENABLED:-true}
      CJSE_CONDUCTOR_POSTGRES_PASSWORD: ${CJSE_CONDUCTOR_POSTGRES_PASSWORD:-conductor}
      CJSE_CONDUCTOR_POSTGRES_URL: ${CJSE_CONDUCTOR_POSTGRES_URL:-jdbc:postgresql://pg:5432/conductor}
      CJSE_CONDUCTOR_POSTGRES_USER: ${CJSE_CONDUCTOR_POSTGRES_USER:-conductor}
      CJSE_CONDUCTOR_QUEUE_BATCHSIZE: "10"
      CJSE_CONDUCTOR_QUEUE_ENDPOINT: "http://localstack:4566"
      CJSE_CONDUCTOR_QUEUE_TYPE: "sqs"
      CJSE_CONDUCTOR_UI_PASSWORD: ${CJSE_CONDUCTOR_UI_PASSWORD:-password}
      CJSE_CONDUCTOR_UI_USERNAME: ${CJSE_CONDUCTOR_UI_USERNAME:-bichard}
    depends_on:
      elasticsearch:
        condition: service_healthy
      pg:
        condition: service_healthy
      localstack:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "--insecure", "--fail", "https://localhost:5000/health"]
      interval: "2s"
      timeout: "5s"
      retries: 60
    ports:
      - 5001:5000
      - 5002:4000

  elasticsearch:
    image: elasticsearch:6.8.15
    # image: elasticsearch:7.17.3
    platform: linux/amd64
    environment:
      - "ES_JAVA_OPTS=-Xms512m -Xmx1024m"
      - transport.host=0.0.0.0
      - discovery.type=single-node
      - xpack.security.enabled=false
    ports:
      - 9200:9200
      - 9300:9300
    healthcheck:
      test: timeout 5 bash -c 'cat < /dev/null > /dev/tcp/localhost/9300'
      interval: 5s
      timeout: 5s
      retries: 100
    logging:
      driver: "json-file"
      options:
        max-size: "1k"
        max-file: "3"

  localstack:
    image: localstack/localstack
    ports:
      - "4566:4566"
    volumes:
      - "${PWD}/environment/localstack/init:/etc/localstack/init"
    environment:
      SERVICES: "s3,sqs,dynamodb"
      AWS_DEFAULT_REGION: "eu-west-2"
    healthcheck:
      test: "timeout 2 bash -c \"curl -s localhost:4566/_localstack/init | grep -q '\\\"READY\\\": true'\""
      interval: 2s
      timeout: 2s
      retries: 100

  bichard7-liberty:
    image: bichard7-liberty
    environment:
      WLP_LOGGING_MESSAGE_FORMAT: "json"
      WLP_LOGGING_MESSAGE_SOURCE: "message,trace,accessLog,ffdc,audit"
      WLP_LOGGING_CONSOLE_FORMAT: "json"
      WLP_LOGGING_CONSOLE_LOGLEVEL: "info"
      WLP_LOGGING_CONSOLE_SOURCE: "message,trace,accessLog,ffdc,audit"
      WLP_LOGGING_APPS_WRITE_JSON: "true"
      DB_USER: ${DB_USER:-bichard}
      DB_PASSWORD: ${DB_PASSWORD:-password}
      DB_HOST: ${DB_HOST:-pg}
      DB_SSL: "${DB_SSL:-false}" # Set to true if connecting to AWS
      DB_SSL_MODE: ${DB_SSL_MODE:-disable} # Set to "require" if connecting to AWS
      LOG_PNC_REQUESTS: "true"
      MQ_CONN_STR: ${MQ_CONN_STR:-tcp://activemq:61616}
      MQ_USER: ${MQ_USER:-admin}
      MQ_PASSWORD: ${MQ_PASSWORD:-admin}
      LOG_LEVEL: ${LOG_LEVEL:-WARN}
      BC_PROXY_URL: ${BC_PROXY_URL:-oltp://beanconnect:31004/BCU31004}
      LOGIN_URL: ${LOGIN_URL:-https://localhost:4443/users/login?redirect=/bichard-ui/Authenticate}
      TOKEN_SECRET: ${TOKEN_SECRET:-OliverTwist}
      HEALTH_CHECK_TAC: ${HEALTH_CHECK_TAC:-HEALTH}
      TAC_SUFFIX: ${TAC_SUFFIX:-M5B}
      ENVIRONMENT: ${ENVIRONMENT:-test}
      DISABLE_MDB: ${DISABLE_MDB:-}
      PROCESSING_VALIDATION_PERCENTAGE: ${PROCESSING_VALIDATION_PERCENTAGE:-100}
      VALIDATE_SCHEMA: "${VALIDATE_SCHEMA:-true}"
      ENABLE_PHASE_2: "${ENABLE_PHASE_2:-true}"
      ENABLE_PHASE_3: "${ENABLE_PHASE_3:-true}"
      PNC_HTTP_ENDPOINTS_ENABLED: "${PNC_HTTP_ENDPOINTS_ENABLED:-}"
      PNC_API_BASE_URL: "${PNC_API_BASE_URL:-}"
      PNC_API_KEY: "${PNC_API_KEY:-apikey}"
    depends_on:
      beanconnect:
        condition: service_started
      mq:
        condition: service_healthy
      pg:
        condition: service_healthy

  beanconnect:
    image: beanconnect
    environment:
      BC_EIS_LISTENER_PORT: ${BC_EIS_LISTENER_PORT:-30001}
      BC_PROXY_HOSTNAME: ${BC_PROXY_HOSTNAME:-LOCAL}
      BC_EIS_HOST: ${BC_EIS_HOST:-pnc}
      BC_EIS_TSEL: ${BC_EIS_TSEL:-SMP20001}
      BC_ADMIN_PASSWORD: password
      SETUP_HOSTS_FILE: "true"
      BC_EIS_LPAP: ${BC_EIS_LPAP:-LPBICHCD}
      BC_EIS_AEQ: ${BC_EIS_AEQ:-7707}
      BC_CONTWIN: ${BC_CONTWIN:-9}
      BC_EIS_IS_BS2000: "${BC_EIS_IS_BS2000:-false}"
      BC_EIS_IS_ADMIN: "${BC_EIS_IS_ADMIN:-false}"
      BC_EIS_IP: ${BC_EIS_IP}
    hostname: 'bc.cjse.org'

  pncemulator:
    image: pncemulator
    ports:
      - 3000:3000

  user-service:
    image: user-service
    environment:
      BASE_URL: "https://localhost:4443/users"
      DB_HOST: ${DB_HOST:-pg}
      INCORRECT_DELAY: ${INCORRECT_DELAY:-0}
      TOKEN_EXPIRES_IN: "10 minutes"
      TOKEN_ISSUER: ${TOKEN_ISSUER:-Bichard}
      TOKEN_SECRET: ${TOKEN_SECRET:-OliverTwist}
    depends_on:
      pg:
        condition: service_healthy

  ui:
    image: ui
    environment:
      DB_HOST: ${DB_HOST:-pg}
      MQ_URL: ${MQ_URL:-tcp://activemq:61613}
      MQ_USER: ${MQ_USER:-admin}
      MQ_PASSWORD: ${MQ_PASSWORD:-admin}
    ports:
      - 4080:443
    depends_on:
      pg:
        condition: service_healthy

  nginx-auth-proxy:
    image: nginx-auth-proxy
    ports:
      - 4443:4443
    environment:
      CJSE_NGINX_APP_DOMAIN: ${CJSE_NGINX_APP_DOMAIN:-liberty:9443}
      CJSE_NGINX_UI_DOMAIN: ${CJSE_NGINX_UI_DOMAIN:-ui}
      CJSE_NGINX_BICHARDBACKEND_DOMAIN: ${CJSE_NGINX_BICHARDBACKEND_DOMAIN:-liberty:9443}
      CJSE_NGINX_USERSERVICE_DOMAIN: ${CJSE_NGINX_USERSERVICE_DOMAIN:-user-service}
      CJSE_NGINX_AUDITLOGGING_DOMAIN: ${CJSE_NGINX_AUDITLOGGING_DOMAIN:-nginx-auth-proxy:4443/elb-status}
      CJSE_NGINX_PROXYSSLVERIFY: ${CJSE_NGINX_PROXYSSLVERIFY:-off}
      CJSE_NGINX_PORT_HTTPS: ${CJSE_NGINX_PORT_HTTPS:-4443}
      CJSE_NGINX_STATICSERVICE_DOMAIN: ${CJSE_NGINX_STATICSERVICE_DOMAIN:-nginx-auth-proxy:4443/elb-status}
    depends_on:
      bichard7-liberty:
        condition: service_healthy
      user-service:
        condition: service_healthy
